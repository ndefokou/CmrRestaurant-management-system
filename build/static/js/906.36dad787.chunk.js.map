{"version":3,"file":"static/js/906.36dad787.chunk.js","mappings":"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","sources":["API/api.js","API/Table.js","../node_modules/@mui/icons-material/esm/Clear.js","components/OrderCard/OrderCard.jsx","pages/Orders.jsx","../node_modules/@tanstack/query-core/src/mutationObserver.ts","../node_modules/@tanstack/react-query/src/useMutation.ts"],"sourcesContent":["import axios from 'axios'\n\n//axios to creating BaseUrl\nconst api = axios.create({\n    baseURL:\"https://codx-json-server.vercel.app\",\n    });\n    \nexport default api;","import { toast } from 'react-toastify';\nimport api from './api'\n\n//getting All Table deta with get method\nexport const TableData=async()=>{\n    try{\n    const response=await api.get(\"/api/tables\")\n    return response.data\n    }\n    catch(err) {\n        toast.error(\"Somthing Wrong!\")\n        }\n}\n\n//getting filtered data with get method\nexport const TableFilterById=async(id)=>\n{    try{\n    const response= await api.get(\"/api/tables/\"+id)\n    return response.data\n        }\n    catch(err) {\n        toast.error(\"Somthing Wrong!\")\n        }\n}\n\n//getting filtered data with get method\nexport const TableFilterByGuest=async(guest)=>{\n    try{\n    const response=await api.get(\"/api/tables?status=Available\")\n    let Filter=response.data.filter(data=>data.seating_capacity >= guest)\n    return Filter\n    }\n    catch(err) {\n        toast.error(\"Somthing Wrong!\")\n        }\n}\n\n//getting filtered data with get method\nexport const TableFilterByStatus=async()=>{\n    try{\n    const response=await api.get(\"/api/tables?status=Booked\")\n    return response.data\n    }\n    catch(err) {\n        toast.error(\"Somthing Wrong!\")\n        }\n}\n\n//update the table Data\nexport const BookingUpdate=async({id,data})=>{\n    try{\n    const response=await api.patch((\"/api/tables/\"+id),data,\n        {headers:{\n            'Accept':'application/json',\n            'Content-Type':'application/json'}})\n        return response.data\n    }\n    catch(err){\n        toast.error(\"Somthing Wrong!\")\n    }\n    \n} \n\n    ","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Clear');","import { Box, Button, Card, IconButton, Typography } from '@mui/material'\nimport React from 'react'\nimport './orders.css'\nimport { Link} from 'react-router-dom'\nimport {Clear } from '@mui/icons-material'\n\nconst OrderCard = ({OrderData}) => {\n  const {data,deleteBookingMutation}=OrderData\n\n  const onSubmit=(id)=>{\n    const data={reservation:{},status:\"Available\"}\n    // console.log(id,data)\n    deleteBookingMutation({id,data})\n  }\n    return (\n    <Card variant='outlined' className='order-card'>\n        <Box>\n        <Typography variant='h6' component='div'>{data.reservation.name}</Typography>\n        <Typography component='p'>Order : {data.reservation.Order}</Typography>\n        <Typography component='p'>Table  : {data.table_no}</Typography>\n        </Box>\n        <Link to={`${data.id}`}>\n        <Button color='secondary' variant='outlined'>view Table</Button>\n        </Link>\n        <IconButton onClick={()=>onSubmit(data.id)} size='small'><Clear/></IconButton> \n    </Card>\n  )\n}\n\nexport default OrderCard","import React from 'react'\nimport OrderCard from '../components/OrderCard/OrderCard'\nimport {Box, Typography } from '@mui/material'\nimport { BookingUpdate, TableFilterByStatus } from '../API/Table'\nimport { useMutation, useQuery, useQueryClient } from '@tanstack/react-query'\nimport Loader from '../components/Loading/Loading'\nimport { toast } from 'react-toastify'\n\nconst ManageBooking = () => {\n  const queryClient = useQueryClient();\n\n  const { isLoading, data } = useQuery({\n    queryKey: [\"booking\"],\n    queryFn: TableFilterByStatus,\n  });\n\n  const { mutateAsync: deleteBookingMutation } = useMutation({\n    mutationFn: BookingUpdate,\n    onSuccess: () => {\n      queryClient.invalidateQueries([\"booking\"]);\n      toast.error(\"Table Booking Cancel!\");\n    },\n  });\n\n  const BookingData=data || []\n  return (\n    <Box className='orders'>\n      <Typography className='first-title' variant='h6'>Orders</Typography>\n      <Typography className='second-title' variant='h4'>Your Journey to Flavor Begins Here!</Typography>\n      <Box className='orders-container'>\n        {\n          isLoading && <Loader/>\n        }\n      {\n        // Table Booked Data Mapping\n        BookingData.length ? BookingData.map((data,index)=><OrderCard key={index} OrderData={{data,deleteBookingMutation}}/>) \n        :<Typography sx={{textAlign:'center',color:'lightgray',fontSize:'30px',padding:'40px 0'}} component='p'> No Bookings Found</Typography>\n      }\n      </Box>\n    </Box>\n  )\n}\n\nexport default ManageBooking","import { getDefaultState } from './mutation'\nimport { notifyManager } from './notifyManager'\nimport { Subscribable } from './subscribable'\nimport { shallowEqualObjects } from './utils'\nimport type { QueryClient } from './queryClient'\nimport type {\n  DefaultError,\n  MutateOptions,\n  MutationObserverOptions,\n  MutationObserverResult,\n} from './types'\nimport type { Action, Mutation } from './mutation'\n\n// TYPES\n\ntype MutationObserverListener<TData, TError, TVariables, TContext> = (\n  result: MutationObserverResult<TData, TError, TVariables, TContext>,\n) => void\n\n// CLASS\n\nexport class MutationObserver<\n  TData = unknown,\n  TError = DefaultError,\n  TVariables = void,\n  TContext = unknown,\n> extends Subscribable<\n  MutationObserverListener<TData, TError, TVariables, TContext>\n> {\n  options!: MutationObserverOptions<TData, TError, TVariables, TContext>\n\n  #client: QueryClient\n  #currentResult: MutationObserverResult<TData, TError, TVariables, TContext> =\n    undefined!\n  #currentMutation?: Mutation<TData, TError, TVariables, TContext>\n  #mutateOptions?: MutateOptions<TData, TError, TVariables, TContext>\n\n  constructor(\n    client: QueryClient,\n    options: MutationObserverOptions<TData, TError, TVariables, TContext>,\n  ) {\n    super()\n\n    this.#client = client\n    this.setOptions(options)\n    this.bindMethods()\n    this.#updateResult()\n  }\n\n  protected bindMethods(): void {\n    this.mutate = this.mutate.bind(this)\n    this.reset = this.reset.bind(this)\n  }\n\n  setOptions(\n    options?: MutationObserverOptions<TData, TError, TVariables, TContext>,\n  ) {\n    const prevOptions = this.options\n    this.options = this.#client.defaultMutationOptions(options)\n    if (!shallowEqualObjects(prevOptions, this.options)) {\n      this.#client.getMutationCache().notify({\n        type: 'observerOptionsUpdated',\n        mutation: this.#currentMutation,\n        observer: this,\n      })\n    }\n    this.#currentMutation?.setOptions(this.options)\n  }\n\n  protected onUnsubscribe(): void {\n    if (!this.hasListeners()) {\n      this.#currentMutation?.removeObserver(this)\n    }\n  }\n\n  onMutationUpdate(action: Action<TData, TError, TVariables, TContext>): void {\n    this.#updateResult()\n\n    this.#notify(action)\n  }\n\n  getCurrentResult(): MutationObserverResult<\n    TData,\n    TError,\n    TVariables,\n    TContext\n  > {\n    return this.#currentResult\n  }\n\n  reset(): void {\n    this.#currentMutation = undefined\n    this.#updateResult()\n    this.#notify()\n  }\n\n  mutate(\n    variables: TVariables,\n    options?: MutateOptions<TData, TError, TVariables, TContext>,\n  ): Promise<TData> {\n    this.#mutateOptions = options\n\n    this.#currentMutation?.removeObserver(this)\n\n    this.#currentMutation = this.#client\n      .getMutationCache()\n      .build(this.#client, this.options)\n\n    this.#currentMutation.addObserver(this)\n\n    return this.#currentMutation.execute(variables)\n  }\n\n  #updateResult(): void {\n    const state =\n      this.#currentMutation?.state ??\n      getDefaultState<TData, TError, TVariables, TContext>()\n\n    this.#currentResult = {\n      ...state,\n      isPending: state.status === 'pending',\n      isSuccess: state.status === 'success',\n      isError: state.status === 'error',\n      isIdle: state.status === 'idle',\n      mutate: this.mutate,\n      reset: this.reset,\n    } as MutationObserverResult<TData, TError, TVariables, TContext>\n  }\n\n  #notify(action?: Action<TData, TError, TVariables, TContext>): void {\n    notifyManager.batch(() => {\n      // First trigger the mutate callbacks\n      if (this.#mutateOptions && this.hasListeners()) {\n        if (action?.type === 'success') {\n          this.#mutateOptions.onSuccess?.(\n            action.data,\n            this.#currentResult.variables!,\n            this.#currentResult.context!,\n          )\n          this.#mutateOptions.onSettled?.(\n            action.data,\n            null,\n            this.#currentResult.variables!,\n            this.#currentResult.context,\n          )\n        } else if (action?.type === 'error') {\n          this.#mutateOptions.onError?.(\n            action.error,\n            this.#currentResult.variables!,\n            this.#currentResult.context,\n          )\n          this.#mutateOptions.onSettled?.(\n            undefined,\n            action.error,\n            this.#currentResult.variables!,\n            this.#currentResult.context,\n          )\n        }\n      }\n\n      // Then trigger the listeners\n      this.listeners.forEach((listener) => {\n        listener(this.#currentResult)\n      })\n    })\n  }\n}\n","'use client'\nimport * as React from 'react'\nimport { MutationObserver, notifyManager } from '@tanstack/query-core'\nimport { useQueryClient } from './QueryClientProvider'\nimport { shouldThrowError } from './utils'\nimport type {\n  UseMutateFunction,\n  UseMutationOptions,\n  UseMutationResult,\n} from './types'\nimport type { DefaultError, QueryClient } from '@tanstack/query-core'\n\n// HOOK\n\nexport function useMutation<\n  TData = unknown,\n  TError = DefaultError,\n  TVariables = void,\n  TContext = unknown,\n>(\n  options: UseMutationOptions<TData, TError, TVariables, TContext>,\n  queryClient?: QueryClient,\n): UseMutationResult<TData, TError, TVariables, TContext> {\n  const client = useQueryClient(queryClient)\n\n  const [observer] = React.useState(\n    () =>\n      new MutationObserver<TData, TError, TVariables, TContext>(\n        client,\n        options,\n      ),\n  )\n\n  React.useEffect(() => {\n    observer.setOptions(options)\n  }, [observer, options])\n\n  const result = React.useSyncExternalStore(\n    React.useCallback(\n      (onStoreChange) =>\n        observer.subscribe(notifyManager.batchCalls(onStoreChange)),\n      [observer],\n    ),\n    () => observer.getCurrentResult(),\n    () => observer.getCurrentResult(),\n  )\n\n  const mutate = React.useCallback<\n    UseMutateFunction<TData, TError, TVariables, TContext>\n  >(\n    (variables, mutateOptions) => {\n      observer.mutate(variables, mutateOptions).catch(noop)\n    },\n    [observer],\n  )\n\n  if (\n    result.error &&\n    shouldThrowError(observer.options.throwOnError, [result.error])\n  ) {\n    throw result.error\n  }\n\n  return { ...result, mutate, mutateAsync: result.mutate }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nfunction noop() {}\n"],"names":["axios","create","baseURL","TableData","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","api","get","sent","abrupt","data","t0","toast","error","stop","apply","arguments","TableFilterById","_ref2","_callee2","id","_context2","_x","TableFilterByGuest","_ref3","_callee3","guest","Filter","_context3","filter","seating_capacity","_x2","TableFilterByStatus","_ref4","_callee4","_context4","BookingUpdate","_ref6","_callee5","_ref5","_context5","patch","headers","_x3","createSvgIcon","_jsx","d","OrderData","deleteBookingMutation","_jsxs","Card","variant","className","children","Box","Typography","component","reservation","name","Order","table_no","Link","to","concat","Button","color","IconButton","onClick","status","size","Clear","queryClient","useQueryClient","_useQuery","useQuery","queryKey","queryFn","isLoading","useMutation","mutationFn","onSuccess","invalidateQueries","mutateAsync","BookingData","Loader","length","map","index","OrderCard","sx","textAlign","fontSize","padding","MutationObserver","_client","WeakMap","_currentResult","_currentMutation","_mutateOptions","_updateResult","WeakSet","_notify","_Subscribable","_inherits","_super","_createSuper","client","options","_this","_classCallCheck","call","_classPrivateMethodInitSpec","_assertThisInitialized","_classPrivateFieldInitSpec","writable","value","_classPrivateFieldSet","setOptions","bindMethods","_classPrivateMethodGet","_updateResult2","_createClass","key","this","mutate","bind","reset","_classPrivateFieldGet2","prevOptions","_classPrivateFieldGet","defaultMutationOptions","shallowEqualObjects","getMutationCache","notify","type","mutation","observer","_classPrivateFieldGet3","hasListeners","removeObserver","action","_notify2","variables","_classPrivateFieldGet4","build","addObserver","execute","Subscribable","_classPrivateFieldGet5","_classPrivateFieldGet6","state","getDefaultState","_objectSpread","isPending","isSuccess","isError","isIdle","_this2","notifyManager","batch","_classPrivateFieldGet7","_classPrivateFieldGet8","_classPrivateFieldGet9","_classPrivateFieldGet10","context","onSettled","_classPrivateFieldGet11","_classPrivateFieldGet12","_classPrivateFieldGet13","_classPrivateFieldGet14","onError","listeners","forEach","listener","_React$useState","React","_slicedToArray","result","onStoreChange","subscribe","batchCalls","getCurrentResult","mutateOptions","catch","noop","shouldThrowError","throwOnError"],"sourceRoot":""}