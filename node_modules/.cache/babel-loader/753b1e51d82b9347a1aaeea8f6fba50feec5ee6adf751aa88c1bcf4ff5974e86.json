{"ast":null,"code":"import _regeneratorRuntime from \"/home/arthur/Documents/CmrRestaurant-management-system/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/arthur/Documents/CmrRestaurant-management-system/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _objectSpread from \"/home/arthur/Documents/CmrRestaurant-management-system/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _classCallCheck from \"/home/arthur/Documents/CmrRestaurant-management-system/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/arthur/Documents/CmrRestaurant-management-system/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/home/arthur/Documents/CmrRestaurant-management-system/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/home/arthur/Documents/CmrRestaurant-management-system/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/arthur/Documents/CmrRestaurant-management-system/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _classPrivateMethodInitSpec from \"/home/arthur/Documents/CmrRestaurant-management-system/node_modules/@babel/runtime/helpers/esm/classPrivateMethodInitSpec.js\";\nimport _classPrivateFieldInitSpec from \"/home/arthur/Documents/CmrRestaurant-management-system/node_modules/@babel/runtime/helpers/esm/classPrivateFieldInitSpec.js\";\nimport _classPrivateMethodGet from \"/home/arthur/Documents/CmrRestaurant-management-system/node_modules/@babel/runtime/helpers/esm/classPrivateMethodGet.js\";\nimport _classPrivateFieldGet from \"/home/arthur/Documents/CmrRestaurant-management-system/node_modules/@babel/runtime/helpers/esm/classPrivateFieldGet.js\";\nimport _classPrivateFieldSet from \"/home/arthur/Documents/CmrRestaurant-management-system/node_modules/@babel/runtime/helpers/esm/classPrivateFieldSet.js\";\nvar _observers, _defaultOptions, _mutationCache, _retryer, _dispatch;\n// src/mutation.ts\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Removable } from \"./removable.js\";\nimport { canFetch, createRetryer } from \"./retryer.js\";\nvar Mutation = (_observers = /*#__PURE__*/new WeakMap(), _defaultOptions = /*#__PURE__*/new WeakMap(), _mutationCache = /*#__PURE__*/new WeakMap(), _retryer = /*#__PURE__*/new WeakMap(), _dispatch = /*#__PURE__*/new WeakSet(), /*#__PURE__*/function (_Removable) {\n  _inherits(Mutation, _Removable);\n  var _super = _createSuper(Mutation);\n  function Mutation(config) {\n    var _this;\n    _classCallCheck(this, Mutation);\n    _this = _super.call(this);\n    _classPrivateMethodInitSpec(_assertThisInitialized(_this), _dispatch);\n    _classPrivateFieldInitSpec(_assertThisInitialized(_this), _observers, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldInitSpec(_assertThisInitialized(_this), _defaultOptions, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldInitSpec(_assertThisInitialized(_this), _mutationCache, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldInitSpec(_assertThisInitialized(_this), _retryer, {\n      writable: true,\n      value: void 0\n    });\n    _this.mutationId = config.mutationId;\n    _classPrivateFieldSet(_assertThisInitialized(_this), _defaultOptions, config.defaultOptions);\n    _classPrivateFieldSet(_assertThisInitialized(_this), _mutationCache, config.mutationCache);\n    _classPrivateFieldSet(_assertThisInitialized(_this), _observers, []);\n    _this.state = config.state || getDefaultState();\n    _this.setOptions(config.options);\n    _this.scheduleGc();\n    return _this;\n  }\n  _createClass(Mutation, [{\n    key: \"setOptions\",\n    value: function setOptions(options) {\n      this.options = _objectSpread(_objectSpread({}, _classPrivateFieldGet(this, _defaultOptions)), options);\n      this.updateGcTime(this.options.gcTime);\n    }\n  }, {\n    key: \"meta\",\n    get: function get() {\n      return this.options.meta;\n    }\n  }, {\n    key: \"addObserver\",\n    value: function addObserver(observer) {\n      if (!_classPrivateFieldGet(this, _observers).includes(observer)) {\n        _classPrivateFieldGet(this, _observers).push(observer);\n        this.clearGcTimeout();\n        _classPrivateFieldGet(this, _mutationCache).notify({\n          type: \"observerAdded\",\n          mutation: this,\n          observer: observer\n        });\n      }\n    }\n  }, {\n    key: \"removeObserver\",\n    value: function removeObserver(observer) {\n      _classPrivateFieldSet(this, _observers, _classPrivateFieldGet(this, _observers).filter(function (x) {\n        return x !== observer;\n      }));\n      this.scheduleGc();\n      _classPrivateFieldGet(this, _mutationCache).notify({\n        type: \"observerRemoved\",\n        mutation: this,\n        observer: observer\n      });\n    }\n  }, {\n    key: \"optionalRemove\",\n    value: function optionalRemove() {\n      if (!_classPrivateFieldGet(this, _observers).length) {\n        if (this.state.status === \"pending\") {\n          this.scheduleGc();\n        } else {\n          _classPrivateFieldGet(this, _mutationCache).remove(this);\n        }\n      }\n    }\n  }, {\n    key: \"continue\",\n    value: function _continue() {\n      var _classPrivateFieldGet2, _classPrivateFieldGet3;\n      return (_classPrivateFieldGet2 = (_classPrivateFieldGet3 = _classPrivateFieldGet(this, _retryer)) === null || _classPrivateFieldGet3 === void 0 ? void 0 : _classPrivateFieldGet3.continue()) !== null && _classPrivateFieldGet2 !== void 0 ? _classPrivateFieldGet2 :\n      // continuing a mutation assumes that variables are set, mutation must have been dehydrated before\n      this.execute(this.state.variables);\n    }\n  }, {\n    key: \"execute\",\n    value: function () {\n      var _execute = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(variables) {\n        var _this2 = this;\n        var executeMutation, restored, _classPrivateFieldGet6, _classPrivateFieldGet7, _this$options$onSucce, _this$options2, _classPrivateFieldGet8, _classPrivateFieldGet9, _this$options$onSettl, _this$options3, _classPrivateFieldGet4, _classPrivateFieldGet5, _this$options$onMutat, _this$options, context, data, _classPrivateFieldGet10, _classPrivateFieldGet11, _this$options$onError, _this$options4, _classPrivateFieldGet12, _classPrivateFieldGet13, _this$options$onSettl2, _this$options5;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              executeMutation = function executeMutation() {\n                var _this2$options$retry;\n                _classPrivateFieldSet(_this2, _retryer, createRetryer({\n                  fn: function fn() {\n                    if (!_this2.options.mutationFn) {\n                      return Promise.reject(new Error(\"No mutationFn found\"));\n                    }\n                    return _this2.options.mutationFn(variables);\n                  },\n                  onFail: function onFail(failureCount, error) {\n                    _classPrivateMethodGet(_this2, _dispatch, _dispatch2).call(_this2, {\n                      type: \"failed\",\n                      failureCount: failureCount,\n                      error: error\n                    });\n                  },\n                  onPause: function onPause() {\n                    _classPrivateMethodGet(_this2, _dispatch, _dispatch2).call(_this2, {\n                      type: \"pause\"\n                    });\n                  },\n                  onContinue: function onContinue() {\n                    _classPrivateMethodGet(_this2, _dispatch, _dispatch2).call(_this2, {\n                      type: \"continue\"\n                    });\n                  },\n                  retry: (_this2$options$retry = _this2.options.retry) !== null && _this2$options$retry !== void 0 ? _this2$options$retry : 0,\n                  retryDelay: _this2.options.retryDelay,\n                  networkMode: _this2.options.networkMode\n                }));\n                return _classPrivateFieldGet(_this2, _retryer).promise;\n              };\n              restored = this.state.status === \"pending\";\n              _context.prev = 2;\n              if (restored) {\n                _context.next = 11;\n                break;\n              }\n              _classPrivateMethodGet(this, _dispatch, _dispatch2).call(this, {\n                type: \"pending\",\n                variables: variables\n              });\n              _context.next = 7;\n              return (_classPrivateFieldGet4 = (_classPrivateFieldGet5 = _classPrivateFieldGet(this, _mutationCache).config).onMutate) === null || _classPrivateFieldGet4 === void 0 ? void 0 : _classPrivateFieldGet4.call(_classPrivateFieldGet5, variables, this);\n            case 7:\n              _context.next = 9;\n              return (_this$options$onMutat = (_this$options = this.options).onMutate) === null || _this$options$onMutat === void 0 ? void 0 : _this$options$onMutat.call(_this$options, variables);\n            case 9:\n              context = _context.sent;\n              if (context !== this.state.context) {\n                _classPrivateMethodGet(this, _dispatch, _dispatch2).call(this, {\n                  type: \"pending\",\n                  context: context,\n                  variables: variables\n                });\n              }\n            case 11:\n              _context.next = 13;\n              return executeMutation();\n            case 13:\n              data = _context.sent;\n              _context.next = 16;\n              return (_classPrivateFieldGet6 = (_classPrivateFieldGet7 = _classPrivateFieldGet(this, _mutationCache).config).onSuccess) === null || _classPrivateFieldGet6 === void 0 ? void 0 : _classPrivateFieldGet6.call(_classPrivateFieldGet7, data, variables, this.state.context, this);\n            case 16:\n              _context.next = 18;\n              return (_this$options$onSucce = (_this$options2 = this.options).onSuccess) === null || _this$options$onSucce === void 0 ? void 0 : _this$options$onSucce.call(_this$options2, data, variables, this.state.context);\n            case 18:\n              _context.next = 20;\n              return (_classPrivateFieldGet8 = (_classPrivateFieldGet9 = _classPrivateFieldGet(this, _mutationCache).config).onSettled) === null || _classPrivateFieldGet8 === void 0 ? void 0 : _classPrivateFieldGet8.call(_classPrivateFieldGet9, data, null, this.state.variables, this.state.context, this);\n            case 20:\n              _context.next = 22;\n              return (_this$options$onSettl = (_this$options3 = this.options).onSettled) === null || _this$options$onSettl === void 0 ? void 0 : _this$options$onSettl.call(_this$options3, data, null, variables, this.state.context);\n            case 22:\n              _classPrivateMethodGet(this, _dispatch, _dispatch2).call(this, {\n                type: \"success\",\n                data: data\n              });\n              return _context.abrupt(\"return\", data);\n            case 26:\n              _context.prev = 26;\n              _context.t0 = _context[\"catch\"](2);\n              _context.prev = 28;\n              _context.next = 31;\n              return (_classPrivateFieldGet10 = (_classPrivateFieldGet11 = _classPrivateFieldGet(this, _mutationCache).config).onError) === null || _classPrivateFieldGet10 === void 0 ? void 0 : _classPrivateFieldGet10.call(_classPrivateFieldGet11, _context.t0, variables, this.state.context, this);\n            case 31:\n              _context.next = 33;\n              return (_this$options$onError = (_this$options4 = this.options).onError) === null || _this$options$onError === void 0 ? void 0 : _this$options$onError.call(_this$options4, _context.t0, variables, this.state.context);\n            case 33:\n              _context.next = 35;\n              return (_classPrivateFieldGet12 = (_classPrivateFieldGet13 = _classPrivateFieldGet(this, _mutationCache).config).onSettled) === null || _classPrivateFieldGet12 === void 0 ? void 0 : _classPrivateFieldGet12.call(_classPrivateFieldGet13, void 0, _context.t0, this.state.variables, this.state.context, this);\n            case 35:\n              _context.next = 37;\n              return (_this$options$onSettl2 = (_this$options5 = this.options).onSettled) === null || _this$options$onSettl2 === void 0 ? void 0 : _this$options$onSettl2.call(_this$options5, void 0, _context.t0, variables, this.state.context);\n            case 37:\n              throw _context.t0;\n            case 38:\n              _context.prev = 38;\n              _classPrivateMethodGet(this, _dispatch, _dispatch2).call(this, {\n                type: \"error\",\n                error: _context.t0\n              });\n              return _context.finish(38);\n            case 41:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this, [[2, 26], [28,, 38, 41]]);\n      }));\n      function execute(_x) {\n        return _execute.apply(this, arguments);\n      }\n      return execute;\n    }()\n  }]);\n  return Mutation;\n}(Removable));\nfunction _dispatch2(action) {\n  var _this3 = this;\n  var reducer = function reducer(state) {\n    switch (action.type) {\n      case \"failed\":\n        return _objectSpread(_objectSpread({}, state), {}, {\n          failureCount: action.failureCount,\n          failureReason: action.error\n        });\n      case \"pause\":\n        return _objectSpread(_objectSpread({}, state), {}, {\n          isPaused: true\n        });\n      case \"continue\":\n        return _objectSpread(_objectSpread({}, state), {}, {\n          isPaused: false\n        });\n      case \"pending\":\n        return _objectSpread(_objectSpread({}, state), {}, {\n          context: action.context,\n          data: void 0,\n          failureCount: 0,\n          failureReason: null,\n          error: null,\n          isPaused: !canFetch(_this3.options.networkMode),\n          status: \"pending\",\n          variables: action.variables,\n          submittedAt: Date.now()\n        });\n      case \"success\":\n        return _objectSpread(_objectSpread({}, state), {}, {\n          data: action.data,\n          failureCount: 0,\n          failureReason: null,\n          error: null,\n          status: \"success\",\n          isPaused: false\n        });\n      case \"error\":\n        return _objectSpread(_objectSpread({}, state), {}, {\n          data: void 0,\n          error: action.error,\n          failureCount: state.failureCount + 1,\n          failureReason: action.error,\n          isPaused: false,\n          status: \"error\"\n        });\n    }\n  };\n  this.state = reducer(this.state);\n  notifyManager.batch(function () {\n    _classPrivateFieldGet(_this3, _observers).forEach(function (observer) {\n      observer.onMutationUpdate(action);\n    });\n    _classPrivateFieldGet(_this3, _mutationCache).notify({\n      mutation: _this3,\n      type: \"updated\",\n      action: action\n    });\n  });\n}\nfunction getDefaultState() {\n  return {\n    context: void 0,\n    data: void 0,\n    error: null,\n    failureCount: 0,\n    failureReason: null,\n    isPaused: false,\n    status: \"idle\",\n    variables: void 0,\n    submittedAt: 0\n  };\n}\nexport { Mutation, getDefaultState };","map":{"version":3,"names":["notifyManager","Removable","canFetch","createRetryer","Mutation","_observers","WeakMap","_defaultOptions","_mutationCache","_retryer","_dispatch","WeakSet","_Removable","_inherits","_super","_createSuper","config","_this","_classCallCheck","call","_classPrivateMethodInitSpec","_assertThisInitialized","_classPrivateFieldInitSpec","writable","value","mutationId","_classPrivateFieldSet","defaultOptions","mutationCache","state","getDefaultState","setOptions","options","scheduleGc","_createClass","key","_objectSpread","_classPrivateFieldGet","updateGcTime","gcTime","get","meta","addObserver","observer","includes","push","clearGcTimeout","notify","type","mutation","removeObserver","filter","x","optionalRemove","length","status","remove","_continue","_classPrivateFieldGet2","_classPrivateFieldGet3","continue","execute","variables","_execute","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_this2","executeMutation","restored","_classPrivateFieldGet6","_classPrivateFieldGet7","_this$options$onSucce","_this$options2","_classPrivateFieldGet8","_classPrivateFieldGet9","_this$options$onSettl","_this$options3","_classPrivateFieldGet4","_classPrivateFieldGet5","_this$options$onMutat","_this$options","context","data","_classPrivateFieldGet10","_classPrivateFieldGet11","_this$options$onError","_this$options4","_classPrivateFieldGet12","_classPrivateFieldGet13","_this$options$onSettl2","_this$options5","wrap","_callee$","_context","prev","next","_this2$options$retry","fn","mutationFn","Promise","reject","Error","onFail","failureCount","error","_classPrivateMethodGet","_dispatch2","onPause","onContinue","retry","retryDelay","networkMode","promise","onMutate","sent","onSuccess","onSettled","abrupt","t0","onError","finish","stop","_x","apply","arguments","action","_this3","reducer","failureReason","isPaused","submittedAt","Date","now","batch","forEach","onMutationUpdate"],"sources":["/home/arthur/Documents/CmrRestaurant-management-system/node_modules/@tanstack/query-core/src/mutation.ts"],"sourcesContent":["import { notifyManager } from './notifyManager'\nimport { Removable } from './removable'\nimport { canFetch, createRetryer } from './retryer'\nimport type {\n  DefaultError,\n  MutationMeta,\n  MutationOptions,\n  MutationStatus,\n} from './types'\nimport type { MutationCache } from './mutationCache'\nimport type { MutationObserver } from './mutationObserver'\nimport type { Retryer } from './retryer'\n\n// TYPES\n\ninterface MutationConfig<TData, TError, TVariables, TContext> {\n  mutationId: number\n  mutationCache: MutationCache\n  options: MutationOptions<TData, TError, TVariables, TContext>\n  defaultOptions?: MutationOptions<TData, TError, TVariables, TContext>\n  state?: MutationState<TData, TError, TVariables, TContext>\n}\n\nexport interface MutationState<\n  TData = unknown,\n  TError = DefaultError,\n  TVariables = void,\n  TContext = unknown,\n> {\n  context: TContext | undefined\n  data: TData | undefined\n  error: TError | null\n  failureCount: number\n  failureReason: TError | null\n  isPaused: boolean\n  status: MutationStatus\n  variables: TVariables | undefined\n  submittedAt: number\n}\n\ninterface FailedAction<TError> {\n  type: 'failed'\n  failureCount: number\n  error: TError | null\n}\n\ninterface PendingAction<TVariables, TContext> {\n  type: 'pending'\n  variables?: TVariables\n  context?: TContext\n}\n\ninterface SuccessAction<TData> {\n  type: 'success'\n  data: TData\n}\n\ninterface ErrorAction<TError> {\n  type: 'error'\n  error: TError\n}\n\ninterface PauseAction {\n  type: 'pause'\n}\n\ninterface ContinueAction {\n  type: 'continue'\n}\n\nexport type Action<TData, TError, TVariables, TContext> =\n  | ContinueAction\n  | ErrorAction<TError>\n  | FailedAction<TError>\n  | PendingAction<TVariables, TContext>\n  | PauseAction\n  | SuccessAction<TData>\n\n// CLASS\n\nexport class Mutation<\n  TData = unknown,\n  TError = DefaultError,\n  TVariables = void,\n  TContext = unknown,\n> extends Removable {\n  state: MutationState<TData, TError, TVariables, TContext>\n  options!: MutationOptions<TData, TError, TVariables, TContext>\n  readonly mutationId: number\n\n  #observers: Array<MutationObserver<TData, TError, TVariables, TContext>>\n  #defaultOptions?: MutationOptions<TData, TError, TVariables, TContext>\n  #mutationCache: MutationCache\n  #retryer?: Retryer<TData>\n\n  constructor(config: MutationConfig<TData, TError, TVariables, TContext>) {\n    super()\n\n    this.mutationId = config.mutationId\n    this.#defaultOptions = config.defaultOptions\n    this.#mutationCache = config.mutationCache\n    this.#observers = []\n    this.state = config.state || getDefaultState()\n\n    this.setOptions(config.options)\n    this.scheduleGc()\n  }\n\n  setOptions(\n    options?: MutationOptions<TData, TError, TVariables, TContext>,\n  ): void {\n    this.options = { ...this.#defaultOptions, ...options }\n\n    this.updateGcTime(this.options.gcTime)\n  }\n\n  get meta(): MutationMeta | undefined {\n    return this.options.meta\n  }\n\n  addObserver(observer: MutationObserver<any, any, any, any>): void {\n    if (!this.#observers.includes(observer)) {\n      this.#observers.push(observer)\n\n      // Stop the mutation from being garbage collected\n      this.clearGcTimeout()\n\n      this.#mutationCache.notify({\n        type: 'observerAdded',\n        mutation: this,\n        observer,\n      })\n    }\n  }\n\n  removeObserver(observer: MutationObserver<any, any, any, any>): void {\n    this.#observers = this.#observers.filter((x) => x !== observer)\n\n    this.scheduleGc()\n\n    this.#mutationCache.notify({\n      type: 'observerRemoved',\n      mutation: this,\n      observer,\n    })\n  }\n\n  protected optionalRemove() {\n    if (!this.#observers.length) {\n      if (this.state.status === 'pending') {\n        this.scheduleGc()\n      } else {\n        this.#mutationCache.remove(this)\n      }\n    }\n  }\n\n  continue(): Promise<unknown> {\n    return (\n      this.#retryer?.continue() ??\n      // continuing a mutation assumes that variables are set, mutation must have been dehydrated before\n      this.execute(this.state.variables!)\n    )\n  }\n\n  async execute(variables: TVariables): Promise<TData> {\n    const executeMutation = () => {\n      this.#retryer = createRetryer({\n        fn: () => {\n          if (!this.options.mutationFn) {\n            return Promise.reject(new Error('No mutationFn found'))\n          }\n          return this.options.mutationFn(variables)\n        },\n        onFail: (failureCount, error) => {\n          this.#dispatch({ type: 'failed', failureCount, error })\n        },\n        onPause: () => {\n          this.#dispatch({ type: 'pause' })\n        },\n        onContinue: () => {\n          this.#dispatch({ type: 'continue' })\n        },\n        retry: this.options.retry ?? 0,\n        retryDelay: this.options.retryDelay,\n        networkMode: this.options.networkMode,\n      })\n\n      return this.#retryer.promise\n    }\n\n    const restored = this.state.status === 'pending'\n\n    try {\n      if (!restored) {\n        this.#dispatch({ type: 'pending', variables })\n        // Notify cache callback\n        await this.#mutationCache.config.onMutate?.(\n          variables,\n          this as Mutation<unknown, unknown, unknown, unknown>,\n        )\n        const context = await this.options.onMutate?.(variables)\n        if (context !== this.state.context) {\n          this.#dispatch({\n            type: 'pending',\n            context,\n            variables,\n          })\n        }\n      }\n      const data = await executeMutation()\n\n      // Notify cache callback\n      await this.#mutationCache.config.onSuccess?.(\n        data,\n        variables,\n        this.state.context,\n        this as Mutation<unknown, unknown, unknown, unknown>,\n      )\n\n      await this.options.onSuccess?.(data, variables, this.state.context)\n\n      // Notify cache callback\n      await this.#mutationCache.config.onSettled?.(\n        data,\n        null,\n        this.state.variables,\n        this.state.context,\n        this as Mutation<unknown, unknown, unknown, unknown>,\n      )\n\n      await this.options.onSettled?.(data, null, variables, this.state.context)\n\n      this.#dispatch({ type: 'success', data })\n      return data\n    } catch (error) {\n      try {\n        // Notify cache callback\n        await this.#mutationCache.config.onError?.(\n          error as any,\n          variables,\n          this.state.context,\n          this as Mutation<unknown, unknown, unknown, unknown>,\n        )\n\n        await this.options.onError?.(\n          error as TError,\n          variables,\n          this.state.context,\n        )\n\n        // Notify cache callback\n        await this.#mutationCache.config.onSettled?.(\n          undefined,\n          error as any,\n          this.state.variables,\n          this.state.context,\n          this as Mutation<unknown, unknown, unknown, unknown>,\n        )\n\n        await this.options.onSettled?.(\n          undefined,\n          error as TError,\n          variables,\n          this.state.context,\n        )\n        throw error\n      } finally {\n        this.#dispatch({ type: 'error', error: error as TError })\n      }\n    }\n  }\n\n  #dispatch(action: Action<TData, TError, TVariables, TContext>): void {\n    const reducer = (\n      state: MutationState<TData, TError, TVariables, TContext>,\n    ): MutationState<TData, TError, TVariables, TContext> => {\n      switch (action.type) {\n        case 'failed':\n          return {\n            ...state,\n            failureCount: action.failureCount,\n            failureReason: action.error,\n          }\n        case 'pause':\n          return {\n            ...state,\n            isPaused: true,\n          }\n        case 'continue':\n          return {\n            ...state,\n            isPaused: false,\n          }\n        case 'pending':\n          return {\n            ...state,\n            context: action.context,\n            data: undefined,\n            failureCount: 0,\n            failureReason: null,\n            error: null,\n            isPaused: !canFetch(this.options.networkMode),\n            status: 'pending',\n            variables: action.variables,\n            submittedAt: Date.now(),\n          }\n        case 'success':\n          return {\n            ...state,\n            data: action.data,\n            failureCount: 0,\n            failureReason: null,\n            error: null,\n            status: 'success',\n            isPaused: false,\n          }\n        case 'error':\n          return {\n            ...state,\n            data: undefined,\n            error: action.error,\n            failureCount: state.failureCount + 1,\n            failureReason: action.error,\n            isPaused: false,\n            status: 'error',\n          }\n      }\n    }\n    this.state = reducer(this.state)\n\n    notifyManager.batch(() => {\n      this.#observers.forEach((observer) => {\n        observer.onMutationUpdate(action)\n      })\n      this.#mutationCache.notify({\n        mutation: this,\n        type: 'updated',\n        action,\n      })\n    })\n  }\n}\n\nexport function getDefaultState<\n  TData,\n  TError,\n  TVariables,\n  TContext,\n>(): MutationState<TData, TError, TVariables, TContext> {\n  return {\n    context: undefined,\n    data: undefined,\n    error: null,\n    failureCount: 0,\n    failureReason: null,\n    isPaused: false,\n    status: 'idle',\n    variables: undefined,\n    submittedAt: 0,\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}