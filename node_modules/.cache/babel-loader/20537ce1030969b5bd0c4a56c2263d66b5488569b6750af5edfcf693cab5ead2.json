{"ast":null,"code":"import _classCallCheck from \"/home/arthur/Documents/CmrRestaurant-management-system/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/arthur/Documents/CmrRestaurant-management-system/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/home/arthur/Documents/CmrRestaurant-management-system/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/home/arthur/Documents/CmrRestaurant-management-system/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/arthur/Documents/CmrRestaurant-management-system/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _classPrivateFieldInitSpec from \"/home/arthur/Documents/CmrRestaurant-management-system/node_modules/@babel/runtime/helpers/esm/classPrivateFieldInitSpec.js\";\nimport _classPrivateFieldGet from \"/home/arthur/Documents/CmrRestaurant-management-system/node_modules/@babel/runtime/helpers/esm/classPrivateFieldGet.js\";\nimport _classPrivateFieldSet from \"/home/arthur/Documents/CmrRestaurant-management-system/node_modules/@babel/runtime/helpers/esm/classPrivateFieldSet.js\";\nvar _focused, _cleanup, _setup;\n// src/focusManager.ts\nimport { Subscribable } from \"./subscribable.js\";\nimport { isServer } from \"./utils.js\";\nvar FocusManager = (_focused = /*#__PURE__*/new WeakMap(), _cleanup = /*#__PURE__*/new WeakMap(), _setup = /*#__PURE__*/new WeakMap(), /*#__PURE__*/function (_Subscribable) {\n  _inherits(FocusManager, _Subscribable);\n  var _super = _createSuper(FocusManager);\n  function FocusManager() {\n    var _this;\n    _classCallCheck(this, FocusManager);\n    _this = _super.call(this);\n    _classPrivateFieldInitSpec(_assertThisInitialized(_this), _focused, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldInitSpec(_assertThisInitialized(_this), _cleanup, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldInitSpec(_assertThisInitialized(_this), _setup, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldSet(_assertThisInitialized(_this), _setup, function (onFocus) {\n      if (!isServer && window.addEventListener) {\n        var listener = function listener() {\n          return onFocus();\n        };\n        window.addEventListener(\"visibilitychange\", listener, false);\n        return function () {\n          window.removeEventListener(\"visibilitychange\", listener);\n        };\n      }\n      return;\n    });\n    return _this;\n  }\n  _createClass(FocusManager, [{\n    key: \"onSubscribe\",\n    value: function onSubscribe() {\n      if (!_classPrivateFieldGet(this, _cleanup)) {\n        this.setEventListener(_classPrivateFieldGet(this, _setup));\n      }\n    }\n  }, {\n    key: \"onUnsubscribe\",\n    value: function onUnsubscribe() {\n      if (!this.hasListeners()) {\n        var _classPrivateFieldGet2;\n        (_classPrivateFieldGet2 = _classPrivateFieldGet(this, _cleanup)) === null || _classPrivateFieldGet2 === void 0 ? void 0 : _classPrivateFieldGet2.call(this);\n        _classPrivateFieldSet(this, _cleanup, void 0);\n      }\n    }\n  }, {\n    key: \"setEventListener\",\n    value: function setEventListener(setup) {\n      var _classPrivateFieldGet3,\n        _this2 = this;\n      _classPrivateFieldSet(this, _setup, setup);\n      (_classPrivateFieldGet3 = _classPrivateFieldGet(this, _cleanup)) === null || _classPrivateFieldGet3 === void 0 ? void 0 : _classPrivateFieldGet3.call(this);\n      _classPrivateFieldSet(this, _cleanup, setup(function (focused) {\n        if (typeof focused === \"boolean\") {\n          _this2.setFocused(focused);\n        } else {\n          _this2.onFocus();\n        }\n      }));\n    }\n  }, {\n    key: \"setFocused\",\n    value: function setFocused(focused) {\n      var changed = _classPrivateFieldGet(this, _focused) !== focused;\n      if (changed) {\n        _classPrivateFieldSet(this, _focused, focused);\n        this.onFocus();\n      }\n    }\n  }, {\n    key: \"onFocus\",\n    value: function onFocus() {\n      this.listeners.forEach(function (listener) {\n        listener();\n      });\n    }\n  }, {\n    key: \"isFocused\",\n    value: function isFocused() {\n      var _globalThis$document;\n      if (typeof _classPrivateFieldGet(this, _focused) === \"boolean\") {\n        return _classPrivateFieldGet(this, _focused);\n      }\n      return ((_globalThis$document = globalThis.document) === null || _globalThis$document === void 0 ? void 0 : _globalThis$document.visibilityState) !== \"hidden\";\n    }\n  }]);\n  return FocusManager;\n}(Subscribable));\nvar focusManager = new FocusManager();\nexport { FocusManager, focusManager };","map":{"version":3,"names":["Subscribable","isServer","FocusManager","_focused","WeakMap","_cleanup","_setup","_Subscribable","_inherits","_super","_createSuper","_this","_classCallCheck","call","_classPrivateFieldInitSpec","_assertThisInitialized","writable","value","_classPrivateFieldSet","onFocus","window","addEventListener","listener","removeEventListener","_createClass","key","onSubscribe","_classPrivateFieldGet","setEventListener","onUnsubscribe","hasListeners","_classPrivateFieldGet2","setup","_classPrivateFieldGet3","_this2","focused","setFocused","changed","listeners","forEach","isFocused","_globalThis$document","globalThis","document","visibilityState","focusManager"],"sources":["/home/arthur/Documents/CmrRestaurant-management-system/node_modules/@tanstack/query-core/src/focusManager.ts"],"sourcesContent":["import { Subscribable } from './subscribable'\nimport { isServer } from './utils'\n\ntype SetupFn = (\n  setFocused: (focused?: boolean) => void,\n) => (() => void) | undefined\n\nexport class FocusManager extends Subscribable {\n  #focused?: boolean\n  #cleanup?: () => void\n\n  #setup: SetupFn\n\n  constructor() {\n    super()\n    this.#setup = (onFocus) => {\n      // addEventListener does not exist in React Native, but window does\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n      if (!isServer && window.addEventListener) {\n        const listener = () => onFocus()\n        // Listen to visibilitychange\n        window.addEventListener('visibilitychange', listener, false)\n\n        return () => {\n          // Be sure to unsubscribe if a new handler is set\n          window.removeEventListener('visibilitychange', listener)\n        }\n      }\n      return\n    }\n  }\n\n  protected onSubscribe(): void {\n    if (!this.#cleanup) {\n      this.setEventListener(this.#setup)\n    }\n  }\n\n  protected onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.#cleanup?.()\n      this.#cleanup = undefined\n    }\n  }\n\n  setEventListener(setup: SetupFn): void {\n    this.#setup = setup\n    this.#cleanup?.()\n    this.#cleanup = setup((focused) => {\n      if (typeof focused === 'boolean') {\n        this.setFocused(focused)\n      } else {\n        this.onFocus()\n      }\n    })\n  }\n\n  setFocused(focused?: boolean): void {\n    const changed = this.#focused !== focused\n    if (changed) {\n      this.#focused = focused\n      this.onFocus()\n    }\n  }\n\n  onFocus(): void {\n    this.listeners.forEach((listener) => {\n      listener()\n    })\n  }\n\n  isFocused(): boolean {\n    if (typeof this.#focused === 'boolean') {\n      return this.#focused\n    }\n\n    // document global can be unavailable in react native\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n    return globalThis.document?.visibilityState !== 'hidden'\n  }\n}\n\nexport const focusManager = new FocusManager()\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}