{"ast":null,"code":"import _objectSpread from \"/home/arthur/Documents/CmrRestaurant-management-system/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _classCallCheck from \"/home/arthur/Documents/CmrRestaurant-management-system/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/arthur/Documents/CmrRestaurant-management-system/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/home/arthur/Documents/CmrRestaurant-management-system/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/home/arthur/Documents/CmrRestaurant-management-system/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/arthur/Documents/CmrRestaurant-management-system/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _classPrivateFieldInitSpec from \"/home/arthur/Documents/CmrRestaurant-management-system/node_modules/@babel/runtime/helpers/esm/classPrivateFieldInitSpec.js\";\nimport _classPrivateFieldGet from \"/home/arthur/Documents/CmrRestaurant-management-system/node_modules/@babel/runtime/helpers/esm/classPrivateFieldGet.js\";\nimport _classPrivateFieldSet from \"/home/arthur/Documents/CmrRestaurant-management-system/node_modules/@babel/runtime/helpers/esm/classPrivateFieldSet.js\";\nvar _mutations, _mutationId, _resuming;\n// src/mutationCache.ts\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Mutation } from \"./mutation.js\";\nimport { matchMutation, noop } from \"./utils.js\";\nimport { Subscribable } from \"./subscribable.js\";\nvar MutationCache = (_mutations = /*#__PURE__*/new WeakMap(), _mutationId = /*#__PURE__*/new WeakMap(), _resuming = /*#__PURE__*/new WeakMap(), /*#__PURE__*/function (_Subscribable) {\n  _inherits(MutationCache, _Subscribable);\n  var _super = _createSuper(MutationCache);\n  function MutationCache() {\n    var _this;\n    var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _classCallCheck(this, MutationCache);\n    _this = _super.call(this);\n    _classPrivateFieldInitSpec(_assertThisInitialized(_this), _mutations, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldInitSpec(_assertThisInitialized(_this), _mutationId, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldInitSpec(_assertThisInitialized(_this), _resuming, {\n      writable: true,\n      value: void 0\n    });\n    _this.config = config;\n    _classPrivateFieldSet(_assertThisInitialized(_this), _mutations, []);\n    _classPrivateFieldSet(_assertThisInitialized(_this), _mutationId, 0);\n    return _this;\n  }\n  _createClass(MutationCache, [{\n    key: \"build\",\n    value: function build(client, options, state) {\n      var _this$mutationId;\n      var mutation = new Mutation({\n        mutationCache: this,\n        mutationId: _classPrivateFieldSet(this, _mutationId, (_this$mutationId = _classPrivateFieldGet(this, _mutationId), ++_this$mutationId)),\n        options: client.defaultMutationOptions(options),\n        state: state\n      });\n      this.add(mutation);\n      return mutation;\n    }\n  }, {\n    key: \"add\",\n    value: function add(mutation) {\n      _classPrivateFieldGet(this, _mutations).push(mutation);\n      this.notify({\n        type: \"added\",\n        mutation: mutation\n      });\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(mutation) {\n      _classPrivateFieldSet(this, _mutations, _classPrivateFieldGet(this, _mutations).filter(function (x) {\n        return x !== mutation;\n      }));\n      this.notify({\n        type: \"removed\",\n        mutation: mutation\n      });\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      var _this2 = this;\n      notifyManager.batch(function () {\n        _classPrivateFieldGet(_this2, _mutations).forEach(function (mutation) {\n          _this2.remove(mutation);\n        });\n      });\n    }\n  }, {\n    key: \"getAll\",\n    value: function getAll() {\n      return _classPrivateFieldGet(this, _mutations);\n    }\n  }, {\n    key: \"find\",\n    value: function find(filters) {\n      var defaultedFilters = _objectSpread({\n        exact: true\n      }, filters);\n      return _classPrivateFieldGet(this, _mutations).find(function (mutation) {\n        return matchMutation(defaultedFilters, mutation);\n      });\n    }\n  }, {\n    key: \"findAll\",\n    value: function findAll() {\n      var filters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return _classPrivateFieldGet(this, _mutations).filter(function (mutation) {\n        return matchMutation(filters, mutation);\n      });\n    }\n  }, {\n    key: \"notify\",\n    value: function notify(event) {\n      var _this3 = this;\n      notifyManager.batch(function () {\n        _this3.listeners.forEach(function (listener) {\n          listener(event);\n        });\n      });\n    }\n  }, {\n    key: \"resumePausedMutations\",\n    value: function resumePausedMutations() {\n      var _classPrivateFieldGet2,\n        _this4 = this;\n      _classPrivateFieldSet(this, _resuming, ((_classPrivateFieldGet2 = _classPrivateFieldGet(this, _resuming)) !== null && _classPrivateFieldGet2 !== void 0 ? _classPrivateFieldGet2 : Promise.resolve()).then(function () {\n        var pausedMutations = _classPrivateFieldGet(_this4, _mutations).filter(function (x) {\n          return x.state.isPaused;\n        });\n        return notifyManager.batch(function () {\n          return pausedMutations.reduce(function (promise, mutation) {\n            return promise.then(function () {\n              return mutation.continue().catch(noop);\n            });\n          }, Promise.resolve());\n        });\n      }).then(function () {\n        _classPrivateFieldSet(_this4, _resuming, void 0);\n      }));\n      return _classPrivateFieldGet(this, _resuming);\n    }\n  }]);\n  return MutationCache;\n}(Subscribable));\nexport { MutationCache };","map":{"version":3,"names":["notifyManager","Mutation","matchMutation","noop","Subscribable","MutationCache","_mutations","WeakMap","_mutationId","_resuming","_Subscribable","_inherits","_super","_createSuper","_this","config","arguments","length","undefined","_classCallCheck","call","_classPrivateFieldInitSpec","_assertThisInitialized","writable","value","_classPrivateFieldSet","_createClass","key","build","client","options","state","_this$mutationId","mutation","mutationCache","mutationId","_classPrivateFieldGet","defaultMutationOptions","add","push","notify","type","remove","filter","x","clear","_this2","batch","forEach","getAll","find","filters","defaultedFilters","_objectSpread","exact","findAll","event","_this3","listeners","listener","resumePausedMutations","_classPrivateFieldGet2","_this4","Promise","resolve","then","pausedMutations","isPaused","reduce","promise","continue","catch"],"sources":["/home/arthur/Documents/CmrRestaurant-management-system/node_modules/@tanstack/query-core/src/mutationCache.ts"],"sourcesContent":["import { notifyManager } from './notifyManager'\nimport { Mutation } from './mutation'\nimport { matchMutation, noop } from './utils'\nimport { Subscribable } from './subscribable'\nimport type { MutationObserver } from './mutationObserver'\nimport type { DefaultError, MutationOptions, NotifyEvent } from './types'\nimport type { QueryClient } from './queryClient'\nimport type { Action, MutationState } from './mutation'\nimport type { MutationFilters } from './utils'\n\n// TYPES\n\ninterface MutationCacheConfig {\n  onError?: (\n    error: DefaultError,\n    variables: unknown,\n    context: unknown,\n    mutation: Mutation<unknown, unknown, unknown>,\n  ) => Promise<unknown> | unknown\n  onSuccess?: (\n    data: unknown,\n    variables: unknown,\n    context: unknown,\n    mutation: Mutation<unknown, unknown, unknown>,\n  ) => Promise<unknown> | unknown\n  onMutate?: (\n    variables: unknown,\n    mutation: Mutation<unknown, unknown, unknown>,\n  ) => Promise<unknown> | unknown\n  onSettled?: (\n    data: unknown | undefined,\n    error: DefaultError | null,\n    variables: unknown,\n    context: unknown,\n    mutation: Mutation<unknown, unknown, unknown>,\n  ) => Promise<unknown> | unknown\n}\n\ninterface NotifyEventMutationAdded extends NotifyEvent {\n  type: 'added'\n  mutation: Mutation<any, any, any, any>\n}\ninterface NotifyEventMutationRemoved extends NotifyEvent {\n  type: 'removed'\n  mutation: Mutation<any, any, any, any>\n}\n\ninterface NotifyEventMutationObserverAdded extends NotifyEvent {\n  type: 'observerAdded'\n  mutation: Mutation<any, any, any, any>\n  observer: MutationObserver<any, any, any>\n}\n\ninterface NotifyEventMutationObserverRemoved extends NotifyEvent {\n  type: 'observerRemoved'\n  mutation: Mutation<any, any, any, any>\n  observer: MutationObserver<any, any, any>\n}\n\ninterface NotifyEventMutationObserverOptionsUpdated extends NotifyEvent {\n  type: 'observerOptionsUpdated'\n  mutation?: Mutation<any, any, any, any>\n  observer: MutationObserver<any, any, any, any>\n}\n\ninterface NotifyEventMutationUpdated extends NotifyEvent {\n  type: 'updated'\n  mutation: Mutation<any, any, any, any>\n  action: Action<any, any, any, any>\n}\n\ntype MutationCacheNotifyEvent =\n  | NotifyEventMutationAdded\n  | NotifyEventMutationRemoved\n  | NotifyEventMutationObserverAdded\n  | NotifyEventMutationObserverRemoved\n  | NotifyEventMutationObserverOptionsUpdated\n  | NotifyEventMutationUpdated\n\ntype MutationCacheListener = (event: MutationCacheNotifyEvent) => void\n\n// CLASS\n\nexport class MutationCache extends Subscribable<MutationCacheListener> {\n  #mutations: Array<Mutation<any, any, any, any>>\n  #mutationId: number\n  #resuming: Promise<unknown> | undefined\n\n  constructor(public config: MutationCacheConfig = {}) {\n    super()\n    this.#mutations = []\n    this.#mutationId = 0\n  }\n\n  build<TData, TError, TVariables, TContext>(\n    client: QueryClient,\n    options: MutationOptions<TData, TError, TVariables, TContext>,\n    state?: MutationState<TData, TError, TVariables, TContext>,\n  ): Mutation<TData, TError, TVariables, TContext> {\n    const mutation = new Mutation({\n      mutationCache: this,\n      mutationId: ++this.#mutationId,\n      options: client.defaultMutationOptions(options),\n      state,\n    })\n\n    this.add(mutation)\n\n    return mutation\n  }\n\n  add(mutation: Mutation<any, any, any, any>): void {\n    this.#mutations.push(mutation)\n    this.notify({ type: 'added', mutation })\n  }\n\n  remove(mutation: Mutation<any, any, any, any>): void {\n    this.#mutations = this.#mutations.filter((x) => x !== mutation)\n    this.notify({ type: 'removed', mutation })\n  }\n\n  clear(): void {\n    notifyManager.batch(() => {\n      this.#mutations.forEach((mutation) => {\n        this.remove(mutation)\n      })\n    })\n  }\n\n  getAll(): Array<Mutation> {\n    return this.#mutations\n  }\n\n  find<\n    TData = unknown,\n    TError = DefaultError,\n    TVariables = any,\n    TContext = unknown,\n  >(\n    filters: MutationFilters,\n  ): Mutation<TData, TError, TVariables, TContext> | undefined {\n    const defaultedFilters = { exact: true, ...filters }\n\n    return this.#mutations.find((mutation) =>\n      matchMutation(defaultedFilters, mutation),\n    )\n  }\n\n  findAll(filters: MutationFilters = {}): Array<Mutation> {\n    return this.#mutations.filter((mutation) =>\n      matchMutation(filters, mutation),\n    )\n  }\n\n  notify(event: MutationCacheNotifyEvent) {\n    notifyManager.batch(() => {\n      this.listeners.forEach((listener) => {\n        listener(event)\n      })\n    })\n  }\n\n  resumePausedMutations(): Promise<unknown> {\n    this.#resuming = (this.#resuming ?? Promise.resolve())\n      .then(() => {\n        const pausedMutations = this.#mutations.filter((x) => x.state.isPaused)\n        return notifyManager.batch(() =>\n          pausedMutations.reduce(\n            (promise, mutation) =>\n              promise.then(() => mutation.continue().catch(noop)),\n            Promise.resolve() as Promise<unknown>,\n          ),\n        )\n      })\n      .then(() => {\n        this.#resuming = undefined\n      })\n\n    return this.#resuming\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}